// Generated by gencpp from file mcptam/FilterPC.msg
// DO NOT EDIT!


#ifndef MCPTAM_MESSAGE_FILTERPC_H
#define MCPTAM_MESSAGE_FILTERPC_H

#include <ros/service_traits.h>


#include <mcptam/FilterPCRequest.h>
#include <mcptam/FilterPCResponse.h>


namespace mcptam
{

struct FilterPC
{

typedef FilterPCRequest Request;
typedef FilterPCResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct FilterPC
} // namespace mcptam


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::mcptam::FilterPC > {
  static const char* value()
  {
    return "65a7199290f4e0fb7bab98f4498d6e85";
  }

  static const char* value(const ::mcptam::FilterPC&) { return value(); }
};

template<>
struct DataType< ::mcptam::FilterPC > {
  static const char* value()
  {
    return "mcptam/FilterPC";
  }

  static const char* value(const ::mcptam::FilterPC&) { return value(); }
};


// service_traits::MD5Sum< ::mcptam::FilterPCRequest> should match 
// service_traits::MD5Sum< ::mcptam::FilterPC > 
template<>
struct MD5Sum< ::mcptam::FilterPCRequest>
{
  static const char* value()
  {
    return MD5Sum< ::mcptam::FilterPC >::value();
  }
  static const char* value(const ::mcptam::FilterPCRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::mcptam::FilterPCRequest> should match 
// service_traits::DataType< ::mcptam::FilterPC > 
template<>
struct DataType< ::mcptam::FilterPCRequest>
{
  static const char* value()
  {
    return DataType< ::mcptam::FilterPC >::value();
  }
  static const char* value(const ::mcptam::FilterPCRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::mcptam::FilterPCResponse> should match 
// service_traits::MD5Sum< ::mcptam::FilterPC > 
template<>
struct MD5Sum< ::mcptam::FilterPCResponse>
{
  static const char* value()
  {
    return MD5Sum< ::mcptam::FilterPC >::value();
  }
  static const char* value(const ::mcptam::FilterPCResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::mcptam::FilterPCResponse> should match 
// service_traits::DataType< ::mcptam::FilterPC > 
template<>
struct DataType< ::mcptam::FilterPCResponse>
{
  static const char* value()
  {
    return DataType< ::mcptam::FilterPC >::value();
  }
  static const char* value(const ::mcptam::FilterPCResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MCPTAM_MESSAGE_FILTERPC_H
