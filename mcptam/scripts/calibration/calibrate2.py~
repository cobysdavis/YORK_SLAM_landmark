#!/usr/local/bin/python

import cv2
import sys
import numpy as np
import glob
import sys
import pickle

print "OpenCV version: ", cv2.__version__

video_file = sys.argv[0]

pattern_size = (9, 6)
square_size = float(1.0)
pattern_points = np.zeros( (np.prod(pattern_size), 3), np.float32 )
pattern_points[:,:2] = np.indices(pattern_size).T.reshape(-1, 2)
pattern_points *= square_size

obj_points = []
img_points = []
h, w = 0, 0

cap = cv2.VideoCapture(video_file)
interleave = int(cap.get(cv2.CAP_PROP_FRAME_COUNT) / 65.0)

cv2.waitKey(1000)
while not cap.isOpened():
    cap = cv2.VideoCapture(video_file)
    cv2.waitKey(1000)
    print "Wait for the header"

pos_frame = cap.get(cv2.CAP_PROP_POS_FRAMES)
print "analyzing video"
nextframe = 0
while True:
    flag, frame = cap.read()
    if flag:
        # The frame is ready and already captured
        pos_frame = cap.get(cv2.CAP_PROP_POS_FRAMES)
        if pos_frame >= nextframe:
            cv2.waitKey(10)
            img = cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)
            print "frame: ", pos_frame
            h, w = img.shape[:2]
            found, corners = cv2.findChessboardCorners(img, pattern_size)
            nextframe += interleave
            if found:
                cv2.drawChessboardCorners(frame, pattern_size, corners, found) 
                sml = cv2.resize(frame, (w/2,h/2))
                cv2.imshow('video', sml)
                term = ( cv2.TERM_CRITERIA_EPS + cv2.TERM_CRITERIA_COUNT, 30, 0.1 )
                cv2.cornerSubPix(img, corners, (5, 5), (-1, -1), term)

            if not found:
                print 'chessboard not found'
                continue
            img_points.append(corners.reshape(-1, 2))
            obj_points.append(pattern_points)
    else:
        cap.set(cv2.CAP_PROP_POS_FRAMES, pos_frame-1)
        print "frame is not ready"
        cv2.waitKey(3000)


    if cap.get(cv2.CAP_PROP_POS_FRAMES) == cap.get(cv2.CAP_PROP_FRAME_COUNT):
        break

cv2.destroyAllWindows()


print cv2.fisheye.calibrate(obj_points, img_points, (w, h), None, None)
